# Copyright 2019 Blockchain Technology Partners
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

version: "2.1"

services:

  settings-tp:
    image: hyperledger/sawtooth-settings-tp:1.1
    depends_on:
      - validator
    entrypoint: settings-tp -v --connect tcp://validator:4004
    volumes:
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom

  validator:
    image: hyperledger/sawtooth-validator:1.1
    expose:
      - 4004
      - 8800
      - 5050
    ports:
      - "4004:4004"
      - "8800:8800"
      - "5050:5050"
    entrypoint: "bash -c \"\
        sawadm keygen && \
        sawtooth keygen && \
        sawset genesis -k /etc/sawtooth/keys/validator.priv \
          -o config-genesis.batch && \
        sawset proposal create -k /etc/sawtooth/keys/validator.priv \
          sawtooth.consensus.min_wait_time=0 \
          sawtooth.consensus.max_wait_time=0 \
          -o consensus-settings.batch && \
        sawadm genesis config-genesis.batch consensus-settings.batch && \
        sawtooth-validator -v \
          --scheduler parallel \
          --endpoint tcp://validator:8800 \
          --bind component:tcp://eth0:4004 \
          --bind consensus:tcp://eth0:5050 \
          --bind network:tcp://eth0:8800 \
        \""
    volumes:
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom

  postgres:
    image: postgres
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust

  devmode-engine:
    image: hyperledger/sawtooth-devmode-engine-rust:1.1
    depends_on:
      - validator
    entrypoint: devmode-engine-rust -C tcp://validator:5050
    volumes:
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom

  rest-api:
    image: hyperledger/sawtooth-rest-api:1.1
    expose:
      - 8008
    ports:
      - "8008:8008"
    depends_on:
      - validator
    entrypoint: sawtooth-rest-api  --connect tcp://validator:4004 --bind rest-api:8008
    volumes:
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom

  daml-tp:
    image: blockchaintp/sawtooth-daml-tp:${ISOLATION_ID}
    environment:
      -  JAVA_ARGS=-Xmx4096m
    command: "/opt/sawtooth-daml-tp/entrypoint.sh tcp://validator:4004"
    depends_on:
      - validator
    volumes:
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom

  daml-rpc:
    image: blockchaintp/sawtooth-daml-rpc:${ISOLATION_ID}
    environment:
      -  JAVA_ARGS=-Xmx4096m
    expose:
      - 9000
      - 5051
    ports:
      - "9000:9000"
      - "5051:5051"
    entrypoint: "bash -c \"\
      sleep 30 && \
      /opt/sawtooth-daml-rpc/entrypoint.sh \
        --participant port=9000,address=0.0.0.0,participant-id=rpc-0,server-jdbc-url=jdbc:postgresql://postgres/postgres?user=postgres \
        --ledger-id test \
        --connect tcp://validator:4004 \
        `ls /opt/sawtooth-daml-rpc/dar/*.dar`\""
    volumes:
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom
      - ../test-dars:/opt/sawtooth-daml-rpc/dar/
    depends_on:
      - validator
      - postgres

  timekeeper:
    image: blockchaintp/timekeeper:${ISOLATION_ID}
    command: "/opt/timekeeper/entrypoint.sh tcp://validator:4004"
    depends_on:
      - validator
    volumes:
      - /dev/urandom:/dev/random
      - /dev/urandom:/dev/urandom
