---
# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for
  # all available settings.

  # Either `true` to make the repository private, or `false` to make it public.
  private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: false

  # Either `true` to enable projects for this repository, or `false` to disable
  # them. If projects are disabled for the organization, passing `true` will
  # cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable
  # them.
  has_downloads: false

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: false

  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: false

  allow_auto_merge: true
  # Either `true` to enable automatic deletion of branches on merge, or `false`
  # to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Collaborators: give specific users access to this repository. See
# https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator
# for available options
collaborators:
# - username: hubot
#   permission: pull

# Note: `permission` is only valid on organization-owned repositories.
# The permission to grant the collaborator. Can be one of:
# * `pull` - can pull, but not push to or administer this repository.
# * `push` - can pull and push, but not administer this repository.
# * `admin` - can pull, push and administer this repository.
# * `maintain` - Recommended for project managers who need to manage the
#                repository without access to sensitive or destructive
#                actions.
# * `triage` - Recommended for contributors who need to proactively manage
#              issues and pull requests without write access.

# See
# https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions
# for available options
teams:
  # The permission to grant the team. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the
  #                repository without access to sensitive or destructive
  #                actions.
  # * `triage` - Recommended for contributors who need to proactively manage
  #              issues and pull requests without write access.
  - name: btp-engineering
    permission: maintain
  - name: btp-documentation
    permission: maintain
  - name: release-managers
    permission: admin
  - name: repository-admin
    permission: admin
  - name: ci-bots
    permission: admin

branches:
  - name: master
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request,
      # before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews.
        # Pass an empty dismissal_restrictions object to disable. User and team
        # dismissal_restrictions are only available for organization-owned
        # repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams:
            - btp-engineering
      # Required. Require status checks to pass before merging. Set to null to
      # disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into
        # this branch
        contexts:
          - DCO
          - pre-commit
          - Commit Message Lint
          - continuous-integration/jenkins/pr-head
          - License Compliance
          - SonarCloud Code Analysis
      # Required. Enforce all configured restrictions for administrators. Set
      # to true to enforce required status checks for repository administrators.
      # Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: false
      required_signatures: true
      required_conversation_resolution: true
      # Required. Restrict who can push to this branch. Team and user
      # restrictions are only available for organization-owned repositories.
      # Set to null to disable.
      restrictions:

autolinks:
  - key_prefix: 'SXT-'
    url_template: 'https://blockchaintp.atlassian.net/browse/SXT-<num>'
  - key_prefix: 'BCP-'
    url_template: 'https://blockchaintp.atlassian.net/browse/BCP-<num>'
  - key_prefix: 'CHRON-'
    url_template: 'https://blockchaintp.atlassian.net/browse/CHRON-<num>'
  - key_prefix: 'DCP-'
    url_template: 'https://blockchaintp.atlassian.net/browse/DCP-<num>'
